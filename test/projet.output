Nonterminals useless in grammar

   ENDL


Terminals unused in grammar

   END
   T_UNION
   T_DIFF
   T_INTER
   T_COMPL


Grammar

    0 $accept: exprs $end

    1 exprs: exprs expr
    2      | expr
    3      | expr error '\n'

    4 nbr: CHIF
    5    | CHIF ',' nbr

    6 ensemble: IDE
    7         | '{' nbr '}'

    8 expr_set: ensemble
    9         | ensemble UNIO expr_set
   10         | ensemble INTER expr_set
   11         | ensemble prive expr_set
   12         | CARD '(' expr_set ')'
   13         | COMP '(' expr_set ')'
   14         | '(' expr_set ')'
   15         | '(' expr_set ')' UNIO expr_set
   16         | '(' expr_set ')' INTER expr_set
   17         | '(' expr_set ')' prive expr_set

   18 val: CHIFA
   19    | CHIF
   20    | IDV

   21 expr_arth: val
   22          | val '+' expr_arth
   23          | val '-' expr_arth
   24          | val '*' expr_arth
   25          | val '/' expr_arth
   26          | '(' expr_arth ')'
   27          | '(' expr_arth ')' '+' expr_arth
   28          | '(' expr_arth ')' '-' expr_arth
   29          | '(' expr_arth ')' '*' expr_arth
   30          | '(' expr_arth ')' '/' expr_arth

   31 expr: IDV '=' expr_arth
   32     | IDE '=' expr_set
   33     | IDE AFFICHE
   34     | IDV AFFICHE


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3
'(' (40) 12 13 14 15 16 17 26 27 28 29 30
')' (41) 12 13 14 15 16 17 26 27 28 29 30
'*' (42) 24 29
'+' (43) 22 27
',' (44) 5
'-' (45) 23 28
'/' (47) 25 30
'=' (61) 31 32
'{' (123) 7
'}' (125) 7
error (256) 3
COMP (258) 13
CARD (259) 12
IDV (260) 20 31 34
IDE (261) 6 32 33
CHIFA (262) 18
CHIF (263) 4 5 19
END (264)
UNIO (265) 9 15
INTER (266) 10 16
prive (267) 11 17
AFFICHE (268) 33 34
T_UNION (269)
T_DIFF (270)
T_INTER (271)
T_COMPL (272)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
exprs (30)
    on left: 1 2 3, on right: 0 1
nbr (31)
    on left: 4 5, on right: 5 7
ensemble (32)
    on left: 6 7, on right: 8 9 10 11
expr_set (33)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 9 10 11 12 13 14
    15 16 17 32
val (34)
    on left: 18 19 20, on right: 21 22 23 24 25
expr_arth (35)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 22 23 24 25 26
    27 28 29 30 31
expr (36)
    on left: 31 32 33 34, on right: 1 2 3


State 0

    0 $accept: . exprs $end

    IDV  shift, and go to state 1
    IDE  shift, and go to state 2

    exprs  go to state 3
    expr   go to state 4


State 1

   31 expr: IDV . '=' expr_arth
   34     | IDV . AFFICHE

    AFFICHE  shift, and go to state 5
    '='      shift, and go to state 6


State 2

   32 expr: IDE . '=' expr_set
   33     | IDE . AFFICHE

    AFFICHE  shift, and go to state 7
    '='      shift, and go to state 8


State 3

    0 $accept: exprs . $end
    1 exprs: exprs . expr

    $end  shift, and go to state 9
    IDV   shift, and go to state 1
    IDE   shift, and go to state 2

    expr  go to state 10


State 4

    2 exprs: expr .
    3      | expr . error '\n'

    error  shift, and go to state 11

    $end  reduce using rule 2 (exprs)
    IDV   reduce using rule 2 (exprs)
    IDE   reduce using rule 2 (exprs)


State 5

   34 expr: IDV AFFICHE .

    $default  reduce using rule 34 (expr)


State 6

   31 expr: IDV '=' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 17


State 7

   33 expr: IDE AFFICHE .

    $default  reduce using rule 33 (expr)


State 8

   32 expr: IDE '=' . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 24


State 9

    0 $accept: exprs $end .

    $default  accept


State 10

    1 exprs: exprs expr .

    $default  reduce using rule 1 (exprs)


State 11

    3 exprs: expr error . '\n'

    '\n'  shift, and go to state 25


State 12

   20 val: IDV .

    $default  reduce using rule 20 (val)


State 13

   18 val: CHIFA .

    $default  reduce using rule 18 (val)


State 14

   19 val: CHIF .

    $default  reduce using rule 19 (val)


State 15

   26 expr_arth: '(' . expr_arth ')'
   27          | '(' . expr_arth ')' '+' expr_arth
   28          | '(' . expr_arth ')' '-' expr_arth
   29          | '(' . expr_arth ')' '*' expr_arth
   30          | '(' . expr_arth ')' '/' expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 26


State 16

   21 expr_arth: val .
   22          | val . '+' expr_arth
   23          | val . '-' expr_arth
   24          | val . '*' expr_arth
   25          | val . '/' expr_arth

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 21 (expr_arth)


State 17

   31 expr: IDV '=' expr_arth .

    $default  reduce using rule 31 (expr)


State 18

   13 expr_set: COMP . '(' expr_set ')'

    '('  shift, and go to state 31


State 19

   12 expr_set: CARD . '(' expr_set ')'

    '('  shift, and go to state 32


State 20

    6 ensemble: IDE .

    $default  reduce using rule 6 (ensemble)


State 21

    7 ensemble: '{' . nbr '}'

    CHIF  shift, and go to state 33

    nbr  go to state 34


State 22

   14 expr_set: '(' . expr_set ')'
   15         | '(' . expr_set ')' UNIO expr_set
   16         | '(' . expr_set ')' INTER expr_set
   17         | '(' . expr_set ')' prive expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 35


State 23

    8 expr_set: ensemble .
    9         | ensemble . UNIO expr_set
   10         | ensemble . INTER expr_set
   11         | ensemble . prive expr_set

    UNIO   shift, and go to state 36
    INTER  shift, and go to state 37
    prive  shift, and go to state 38

    $default  reduce using rule 8 (expr_set)


State 24

   32 expr: IDE '=' expr_set .

    $default  reduce using rule 32 (expr)


State 25

    3 exprs: expr error '\n' .

    $default  reduce using rule 3 (exprs)


State 26

   26 expr_arth: '(' expr_arth . ')'
   27          | '(' expr_arth . ')' '+' expr_arth
   28          | '(' expr_arth . ')' '-' expr_arth
   29          | '(' expr_arth . ')' '*' expr_arth
   30          | '(' expr_arth . ')' '/' expr_arth

    ')'  shift, and go to state 39


State 27

   22 expr_arth: val '+' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 40


State 28

   23 expr_arth: val '-' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 41


State 29

   24 expr_arth: val '*' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 42


State 30

   25 expr_arth: val '/' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 43


State 31

   13 expr_set: COMP '(' . expr_set ')'

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 44


State 32

   12 expr_set: CARD '(' . expr_set ')'

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 45


State 33

    4 nbr: CHIF .
    5    | CHIF . ',' nbr

    ','  shift, and go to state 46

    $default  reduce using rule 4 (nbr)


State 34

    7 ensemble: '{' nbr . '}'

    '}'  shift, and go to state 47


State 35

   14 expr_set: '(' expr_set . ')'
   15         | '(' expr_set . ')' UNIO expr_set
   16         | '(' expr_set . ')' INTER expr_set
   17         | '(' expr_set . ')' prive expr_set

    ')'  shift, and go to state 48


State 36

    9 expr_set: ensemble UNIO . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 49


State 37

   10 expr_set: ensemble INTER . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 50


State 38

   11 expr_set: ensemble prive . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 51


State 39

   26 expr_arth: '(' expr_arth ')' .
   27          | '(' expr_arth ')' . '+' expr_arth
   28          | '(' expr_arth ')' . '-' expr_arth
   29          | '(' expr_arth ')' . '*' expr_arth
   30          | '(' expr_arth ')' . '/' expr_arth

    '+'  shift, and go to state 52
    '-'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55

    $default  reduce using rule 26 (expr_arth)


State 40

   22 expr_arth: val '+' expr_arth .

    $default  reduce using rule 22 (expr_arth)


State 41

   23 expr_arth: val '-' expr_arth .

    $default  reduce using rule 23 (expr_arth)


State 42

   24 expr_arth: val '*' expr_arth .

    $default  reduce using rule 24 (expr_arth)


State 43

   25 expr_arth: val '/' expr_arth .

    $default  reduce using rule 25 (expr_arth)


State 44

   13 expr_set: COMP '(' expr_set . ')'

    ')'  shift, and go to state 56


State 45

   12 expr_set: CARD '(' expr_set . ')'

    ')'  shift, and go to state 57


State 46

    5 nbr: CHIF ',' . nbr

    CHIF  shift, and go to state 33

    nbr  go to state 58


State 47

    7 ensemble: '{' nbr '}' .

    $default  reduce using rule 7 (ensemble)


State 48

   14 expr_set: '(' expr_set ')' .
   15         | '(' expr_set ')' . UNIO expr_set
   16         | '(' expr_set ')' . INTER expr_set
   17         | '(' expr_set ')' . prive expr_set

    UNIO   shift, and go to state 59
    INTER  shift, and go to state 60
    prive  shift, and go to state 61

    $default  reduce using rule 14 (expr_set)


State 49

    9 expr_set: ensemble UNIO expr_set .

    $default  reduce using rule 9 (expr_set)


State 50

   10 expr_set: ensemble INTER expr_set .

    $default  reduce using rule 10 (expr_set)


State 51

   11 expr_set: ensemble prive expr_set .

    $default  reduce using rule 11 (expr_set)


State 52

   27 expr_arth: '(' expr_arth ')' '+' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 62


State 53

   28 expr_arth: '(' expr_arth ')' '-' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 63


State 54

   29 expr_arth: '(' expr_arth ')' '*' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 64


State 55

   30 expr_arth: '(' expr_arth ')' '/' . expr_arth

    IDV    shift, and go to state 12
    CHIFA  shift, and go to state 13
    CHIF   shift, and go to state 14
    '('    shift, and go to state 15

    val        go to state 16
    expr_arth  go to state 65


State 56

   13 expr_set: COMP '(' expr_set ')' .

    $default  reduce using rule 13 (expr_set)


State 57

   12 expr_set: CARD '(' expr_set ')' .

    $default  reduce using rule 12 (expr_set)


State 58

    5 nbr: CHIF ',' nbr .

    $default  reduce using rule 5 (nbr)


State 59

   15 expr_set: '(' expr_set ')' UNIO . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 66


State 60

   16 expr_set: '(' expr_set ')' INTER . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 67


State 61

   17 expr_set: '(' expr_set ')' prive . expr_set

    COMP  shift, and go to state 18
    CARD  shift, and go to state 19
    IDE   shift, and go to state 20
    '{'   shift, and go to state 21
    '('   shift, and go to state 22

    ensemble  go to state 23
    expr_set  go to state 68


State 62

   27 expr_arth: '(' expr_arth ')' '+' expr_arth .

    $default  reduce using rule 27 (expr_arth)


State 63

   28 expr_arth: '(' expr_arth ')' '-' expr_arth .

    $default  reduce using rule 28 (expr_arth)


State 64

   29 expr_arth: '(' expr_arth ')' '*' expr_arth .

    $default  reduce using rule 29 (expr_arth)


State 65

   30 expr_arth: '(' expr_arth ')' '/' expr_arth .

    $default  reduce using rule 30 (expr_arth)


State 66

   15 expr_set: '(' expr_set ')' UNIO expr_set .

    $default  reduce using rule 15 (expr_set)


State 67

   16 expr_set: '(' expr_set ')' INTER expr_set .

    $default  reduce using rule 16 (expr_set)


State 68

   17 expr_set: '(' expr_set ')' prive expr_set .

    $default  reduce using rule 17 (expr_set)
