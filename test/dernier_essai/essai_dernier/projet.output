Nonterminals useless in grammar

   ENDL


Terminals unused in grammar

   END


Grammar

    0 $accept: exprs $end

    1 exprs: exprs expr
    2      | expr
    3      | expr error '\n'

    4 nbr: CHIF
    5    | CHIF ',' nbr

    6 ensemble: IDE
    7         | '{' nbr '}'

    8 expr_set: ensemble
    9         | ensemble UNIO expr_set
   10         | ensemble INTER expr_set
   11         | ensemble prive expr_set
   12         | CARD '(' expr_set ')'
   13         | COMP '(' expr_set ')'
   14         | '(' expr_set ')'
   15         | '(' expr_set ')' UNIO expr_set
   16         | '(' expr_set ')' INTER expr_set
   17         | '(' expr_set ')' prive expr_set

   18 val: CHIFA
   19    | CHIF
   20    | IDV

   21 expr_arth: val
   22          | val '+' expr_arth
   23          | val '-' expr_arth
   24          | val '*' expr_arth
   25          | val '/' expr_arth
   26          | '(' expr_arth ')'
   27          | '(' expr_arth ')' '+' expr_arth
   28          | '(' expr_arth ')' '-' expr_arth
   29          | '(' expr_arth ')' '*' expr_arth
   30          | '(' expr_arth ')' '/' expr_arth

   31 expr: IDV '=' expr_arth
   32     | IDE '=' expr_set
   33     | IDV '=' expr_set
   34     | IDE AFFICHE
   35     | IDV AFFICHE
   36     | IDV '=' IDV APPART expr_set


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3
'(' (40) 12 13 14 15 16 17 26 27 28 29 30
')' (41) 12 13 14 15 16 17 26 27 28 29 30
'*' (42) 24 29
'+' (43) 22 27
',' (44) 5
'-' (45) 23 28
'/' (47) 25 30
'=' (61) 31 32 33 36
'{' (123) 7
'}' (125) 7
error (256) 3
APPART (258) 36
COMP (259) 13
CARD (260) 12
IDV (261) 20 31 33 35 36
IDE (262) 6 32 34
CHIFA (263) 18
CHIF (264) 4 5 19
END (265)
UNIO (266) 9 15
INTER (267) 10 16
prive (268) 11 17
AFFICHE (269) 34 35


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
exprs (27)
    on left: 1 2 3, on right: 0 1
nbr (28)
    on left: 4 5, on right: 5 7
ensemble (29)
    on left: 6 7, on right: 8 9 10 11
expr_set (30)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 9 10 11 12 13 14
    15 16 17 32 33 36
val (31)
    on left: 18 19 20, on right: 21 22 23 24 25
expr_arth (32)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 22 23 24 25 26
    27 28 29 30 31
expr (33)
    on left: 31 32 33 34 35 36, on right: 1 2 3


State 0

    0 $accept: . exprs $end

    IDV  shift, and go to state 1
    IDE  shift, and go to state 2

    exprs  go to state 3
    expr   go to state 4


State 1

   31 expr: IDV . '=' expr_arth
   33     | IDV . '=' expr_set
   35     | IDV . AFFICHE
   36     | IDV . '=' IDV APPART expr_set

    AFFICHE  shift, and go to state 5
    '='      shift, and go to state 6


State 2

   32 expr: IDE . '=' expr_set
   34     | IDE . AFFICHE

    AFFICHE  shift, and go to state 7
    '='      shift, and go to state 8


State 3

    0 $accept: exprs . $end
    1 exprs: exprs . expr

    $end  shift, and go to state 9
    IDV   shift, and go to state 1
    IDE   shift, and go to state 2

    expr  go to state 10


State 4

    2 exprs: expr .
    3      | expr . error '\n'

    error  shift, and go to state 11

    $end  reduce using rule 2 (exprs)
    IDV   reduce using rule 2 (exprs)
    IDE   reduce using rule 2 (exprs)


State 5

   35 expr: IDV AFFICHE .

    $default  reduce using rule 35 (expr)


State 6

   31 expr: IDV '=' . expr_arth
   33     | IDV '=' . expr_set
   36     | IDV '=' . IDV APPART expr_set

    COMP   shift, and go to state 12
    CARD   shift, and go to state 13
    IDV    shift, and go to state 14
    IDE    shift, and go to state 15
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '{'    shift, and go to state 18
    '('    shift, and go to state 19

    ensemble   go to state 20
    expr_set   go to state 21
    val        go to state 22
    expr_arth  go to state 23


State 7

   34 expr: IDE AFFICHE .

    $default  reduce using rule 34 (expr)


State 8

   32 expr: IDE '=' . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 25


State 9

    0 $accept: exprs $end .

    $default  accept


State 10

    1 exprs: exprs expr .

    $default  reduce using rule 1 (exprs)


State 11

    3 exprs: expr error . '\n'

    '\n'  shift, and go to state 26


State 12

   13 expr_set: COMP . '(' expr_set ')'

    '('  shift, and go to state 27


State 13

   12 expr_set: CARD . '(' expr_set ')'

    '('  shift, and go to state 28


State 14

   20 val: IDV .
   36 expr: IDV '=' IDV . APPART expr_set

    APPART  shift, and go to state 29

    $default  reduce using rule 20 (val)


State 15

    6 ensemble: IDE .

    $default  reduce using rule 6 (ensemble)


State 16

   18 val: CHIFA .

    $default  reduce using rule 18 (val)


State 17

   19 val: CHIF .

    $default  reduce using rule 19 (val)


State 18

    7 ensemble: '{' . nbr '}'

    CHIF  shift, and go to state 30

    nbr  go to state 31


State 19

   14 expr_set: '(' . expr_set ')'
   15         | '(' . expr_set ')' UNIO expr_set
   16         | '(' . expr_set ')' INTER expr_set
   17         | '(' . expr_set ')' prive expr_set
   26 expr_arth: '(' . expr_arth ')'
   27          | '(' . expr_arth ')' '+' expr_arth
   28          | '(' . expr_arth ')' '-' expr_arth
   29          | '(' . expr_arth ')' '*' expr_arth
   30          | '(' . expr_arth ')' '/' expr_arth

    COMP   shift, and go to state 12
    CARD   shift, and go to state 13
    IDV    shift, and go to state 32
    IDE    shift, and go to state 15
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '{'    shift, and go to state 18
    '('    shift, and go to state 19

    ensemble   go to state 20
    expr_set   go to state 33
    val        go to state 22
    expr_arth  go to state 34


State 20

    8 expr_set: ensemble .
    9         | ensemble . UNIO expr_set
   10         | ensemble . INTER expr_set
   11         | ensemble . prive expr_set

    UNIO   shift, and go to state 35
    INTER  shift, and go to state 36
    prive  shift, and go to state 37

    $default  reduce using rule 8 (expr_set)


State 21

   33 expr: IDV '=' expr_set .

    $default  reduce using rule 33 (expr)


State 22

   21 expr_arth: val .
   22          | val . '+' expr_arth
   23          | val . '-' expr_arth
   24          | val . '*' expr_arth
   25          | val . '/' expr_arth

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41

    $default  reduce using rule 21 (expr_arth)


State 23

   31 expr: IDV '=' expr_arth .

    $default  reduce using rule 31 (expr)


State 24

   14 expr_set: '(' . expr_set ')'
   15         | '(' . expr_set ')' UNIO expr_set
   16         | '(' . expr_set ')' INTER expr_set
   17         | '(' . expr_set ')' prive expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 33


State 25

   32 expr: IDE '=' expr_set .

    $default  reduce using rule 32 (expr)


State 26

    3 exprs: expr error '\n' .

    $default  reduce using rule 3 (exprs)


State 27

   13 expr_set: COMP '(' . expr_set ')'

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 42


State 28

   12 expr_set: CARD '(' . expr_set ')'

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 43


State 29

   36 expr: IDV '=' IDV APPART . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 44


State 30

    4 nbr: CHIF .
    5    | CHIF . ',' nbr

    ','  shift, and go to state 45

    $default  reduce using rule 4 (nbr)


State 31

    7 ensemble: '{' nbr . '}'

    '}'  shift, and go to state 46


State 32

   20 val: IDV .

    $default  reduce using rule 20 (val)


State 33

   14 expr_set: '(' expr_set . ')'
   15         | '(' expr_set . ')' UNIO expr_set
   16         | '(' expr_set . ')' INTER expr_set
   17         | '(' expr_set . ')' prive expr_set

    ')'  shift, and go to state 47


State 34

   26 expr_arth: '(' expr_arth . ')'
   27          | '(' expr_arth . ')' '+' expr_arth
   28          | '(' expr_arth . ')' '-' expr_arth
   29          | '(' expr_arth . ')' '*' expr_arth
   30          | '(' expr_arth . ')' '/' expr_arth

    ')'  shift, and go to state 48


State 35

    9 expr_set: ensemble UNIO . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 49


State 36

   10 expr_set: ensemble INTER . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 50


State 37

   11 expr_set: ensemble prive . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 51


State 38

   22 expr_arth: val '+' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 53


State 39

   23 expr_arth: val '-' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 54


State 40

   24 expr_arth: val '*' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 55


State 41

   25 expr_arth: val '/' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 56


State 42

   13 expr_set: COMP '(' expr_set . ')'

    ')'  shift, and go to state 57


State 43

   12 expr_set: CARD '(' expr_set . ')'

    ')'  shift, and go to state 58


State 44

   36 expr: IDV '=' IDV APPART expr_set .

    $default  reduce using rule 36 (expr)


State 45

    5 nbr: CHIF ',' . nbr

    CHIF  shift, and go to state 30

    nbr  go to state 59


State 46

    7 ensemble: '{' nbr '}' .

    $default  reduce using rule 7 (ensemble)


State 47

   14 expr_set: '(' expr_set ')' .
   15         | '(' expr_set ')' . UNIO expr_set
   16         | '(' expr_set ')' . INTER expr_set
   17         | '(' expr_set ')' . prive expr_set

    UNIO   shift, and go to state 60
    INTER  shift, and go to state 61
    prive  shift, and go to state 62

    $default  reduce using rule 14 (expr_set)


State 48

   26 expr_arth: '(' expr_arth ')' .
   27          | '(' expr_arth ')' . '+' expr_arth
   28          | '(' expr_arth ')' . '-' expr_arth
   29          | '(' expr_arth ')' . '*' expr_arth
   30          | '(' expr_arth ')' . '/' expr_arth

    '+'  shift, and go to state 63
    '-'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 26 (expr_arth)


State 49

    9 expr_set: ensemble UNIO expr_set .

    $default  reduce using rule 9 (expr_set)


State 50

   10 expr_set: ensemble INTER expr_set .

    $default  reduce using rule 10 (expr_set)


State 51

   11 expr_set: ensemble prive expr_set .

    $default  reduce using rule 11 (expr_set)


State 52

   26 expr_arth: '(' . expr_arth ')'
   27          | '(' . expr_arth ')' '+' expr_arth
   28          | '(' . expr_arth ')' '-' expr_arth
   29          | '(' . expr_arth ')' '*' expr_arth
   30          | '(' . expr_arth ')' '/' expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 34


State 53

   22 expr_arth: val '+' expr_arth .

    $default  reduce using rule 22 (expr_arth)


State 54

   23 expr_arth: val '-' expr_arth .

    $default  reduce using rule 23 (expr_arth)


State 55

   24 expr_arth: val '*' expr_arth .

    $default  reduce using rule 24 (expr_arth)


State 56

   25 expr_arth: val '/' expr_arth .

    $default  reduce using rule 25 (expr_arth)


State 57

   13 expr_set: COMP '(' expr_set ')' .

    $default  reduce using rule 13 (expr_set)


State 58

   12 expr_set: CARD '(' expr_set ')' .

    $default  reduce using rule 12 (expr_set)


State 59

    5 nbr: CHIF ',' nbr .

    $default  reduce using rule 5 (nbr)


State 60

   15 expr_set: '(' expr_set ')' UNIO . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 67


State 61

   16 expr_set: '(' expr_set ')' INTER . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 68


State 62

   17 expr_set: '(' expr_set ')' prive . expr_set

    COMP  shift, and go to state 12
    CARD  shift, and go to state 13
    IDE   shift, and go to state 15
    '{'   shift, and go to state 18
    '('   shift, and go to state 24

    ensemble  go to state 20
    expr_set  go to state 69


State 63

   27 expr_arth: '(' expr_arth ')' '+' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 70


State 64

   28 expr_arth: '(' expr_arth ')' '-' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 71


State 65

   29 expr_arth: '(' expr_arth ')' '*' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 72


State 66

   30 expr_arth: '(' expr_arth ')' '/' . expr_arth

    IDV    shift, and go to state 32
    CHIFA  shift, and go to state 16
    CHIF   shift, and go to state 17
    '('    shift, and go to state 52

    val        go to state 22
    expr_arth  go to state 73


State 67

   15 expr_set: '(' expr_set ')' UNIO expr_set .

    $default  reduce using rule 15 (expr_set)


State 68

   16 expr_set: '(' expr_set ')' INTER expr_set .

    $default  reduce using rule 16 (expr_set)


State 69

   17 expr_set: '(' expr_set ')' prive expr_set .

    $default  reduce using rule 17 (expr_set)


State 70

   27 expr_arth: '(' expr_arth ')' '+' expr_arth .

    $default  reduce using rule 27 (expr_arth)


State 71

   28 expr_arth: '(' expr_arth ')' '-' expr_arth .

    $default  reduce using rule 28 (expr_arth)


State 72

   29 expr_arth: '(' expr_arth ')' '*' expr_arth .

    $default  reduce using rule 29 (expr_arth)


State 73

   30 expr_arth: '(' expr_arth ')' '/' expr_arth .

    $default  reduce using rule 30 (expr_arth)
