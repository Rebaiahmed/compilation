Nonterminals useless in grammar

   val


Terminals unused in grammar

   T_PLUS
   T_MOINS
   T_MULTIPL
   T_DIV
   T_PUIS
   T_QUIT
   T_NEWLINE
   T_ERROR
   T_AFFECT
   '\n'


Rules useless in grammar

   30 val: T_arith
   31    | T_INT
   32    | IDENT
   33    | T_CARD expr_ens


Grammar

    0 $accept: exprs $end

    1 exprs: %empty
    2      | exprs expr END

    3 nbr: T_INT
    4    | T_INT ',' nbr

    5 ensemble: IDENT
    6         | '{' nbr '}'

    7 expr_ens: ensemble
    8         | ensemble T_UNION expr_ens
    9         | ensemble T_INTER expr_ens
   10         | T_COMPL expr_ens
   11         | ensemble T_DIFF expr_ens
   12         | '(' expr_ens ')'
   13         | '(' expr_ens ')' T_UNION expr_ens
   14         | '(' expr_ens ')' T_INTER expr_ens
   15         | '(' expr_ens ')' T_DIFF expr_ens

   16 expr_arth: T_arith
   17          | T_arith '+' expr_arth
   18          | T_arith '-' expr_arth
   19          | T_arith '*' expr_arth
   20          | T_arith '/' expr_arth
   21          | T_CARD expr_ens
   22          | '(' expr_arth ')'
   23          | '(' expr_arth ')' '+' expr_arth
   24          | '(' expr_arth ')' '-' expr_arth
   25          | '(' expr_arth ')' '*' expr_arth
   26          | '(' expr_arth ')' '/' expr_arth

   27 expr: IDENT '=' expr_arth
   28     | IDENT '=' expr_ens
   29     | IDENT "=="


Terminals, with rules where they appear

$end (0) 0
'\n' (10)
'(' (40) 12 13 14 15 22 23 24 25 26
')' (41) 12 13 14 15 22 23 24 25 26
'*' (42) 19 25
'+' (43) 17 23
',' (44) 4
'-' (45) 18 24
'/' (47) 20 26
'=' (61) 27 28
'{' (123) 6
'}' (125) 6
error (256)
IDENT (258) 5 27 28 29
T_PLUS (259)
T_MOINS (260)
T_MULTIPL (261)
T_DIV (262)
T_PUIS (263)
T_QUIT (264)
T_NEWLINE (265)
T_ERROR (266)
T_INTER (267) 9 14
T_UNION (268) 8 13
T_DIFF (269) 11 15
T_CARD (270) 21
T_COMPL (271) 10
T_AFFECT (272)
T_INT (273) 3 4
T_arith (274) 16 17 18 19 20
END (275) 2
"==" (276) 29


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
exprs (34)
    on left: 1 2, on right: 0 2
nbr (35)
    on left: 3 4, on right: 4 6
ensemble (36)
    on left: 5 6, on right: 7 8 9 11
expr_ens (37)
    on left: 7 8 9 10 11 12 13 14 15, on right: 8 9 10 11 12 13 14
    15 21 28
expr_arth (38)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 17 18 19 20
    22 23 24 25 26 27
expr (39)
    on left: 27 28 29, on right: 2


State 0

    0 $accept: . exprs $end

    $default  reduce using rule 1 (exprs)

    exprs  go to state 1


State 1

    0 $accept: exprs . $end
    2 exprs: exprs . expr END

    $end   shift, and go to state 2
    IDENT  shift, and go to state 3

    expr  go to state 4


State 2

    0 $accept: exprs $end .

    $default  accept


State 3

   27 expr: IDENT . '=' expr_arth
   28     | IDENT . '=' expr_ens
   29     | IDENT . "=="

    '='   shift, and go to state 5
    "=="  shift, and go to state 6


State 4

    2 exprs: exprs expr . END

    END  shift, and go to state 7


State 5

   27 expr: IDENT '=' . expr_arth
   28     | IDENT '=' . expr_ens

    IDENT    shift, and go to state 8
    T_CARD   shift, and go to state 9
    T_COMPL  shift, and go to state 10
    T_arith  shift, and go to state 11
    '('      shift, and go to state 12
    '{'      shift, and go to state 13

    ensemble   go to state 14
    expr_ens   go to state 15
    expr_arth  go to state 16


State 6

   29 expr: IDENT "==" .

    $default  reduce using rule 29 (expr)


State 7

    2 exprs: exprs expr END .

    $default  reduce using rule 2 (exprs)


State 8

    5 ensemble: IDENT .

    $default  reduce using rule 5 (ensemble)


State 9

   21 expr_arth: T_CARD . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 18


State 10

   10 expr_ens: T_COMPL . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 19


State 11

   16 expr_arth: T_arith .
   17          | T_arith . '+' expr_arth
   18          | T_arith . '-' expr_arth
   19          | T_arith . '*' expr_arth
   20          | T_arith . '/' expr_arth

    '+'  shift, and go to state 20
    '-'  shift, and go to state 21
    '*'  shift, and go to state 22
    '/'  shift, and go to state 23

    $default  reduce using rule 16 (expr_arth)


State 12

   12 expr_ens: '(' . expr_ens ')'
   13         | '(' . expr_ens ')' T_UNION expr_ens
   14         | '(' . expr_ens ')' T_INTER expr_ens
   15         | '(' . expr_ens ')' T_DIFF expr_ens
   22 expr_arth: '(' . expr_arth ')'
   23          | '(' . expr_arth ')' '+' expr_arth
   24          | '(' . expr_arth ')' '-' expr_arth
   25          | '(' . expr_arth ')' '*' expr_arth
   26          | '(' . expr_arth ')' '/' expr_arth

    IDENT    shift, and go to state 8
    T_CARD   shift, and go to state 9
    T_COMPL  shift, and go to state 10
    T_arith  shift, and go to state 11
    '('      shift, and go to state 12
    '{'      shift, and go to state 13

    ensemble   go to state 14
    expr_ens   go to state 24
    expr_arth  go to state 25


State 13

    6 ensemble: '{' . nbr '}'

    T_INT  shift, and go to state 26

    nbr  go to state 27


State 14

    7 expr_ens: ensemble .
    8         | ensemble . T_UNION expr_ens
    9         | ensemble . T_INTER expr_ens
   11         | ensemble . T_DIFF expr_ens

    T_INTER  shift, and go to state 28
    T_UNION  shift, and go to state 29
    T_DIFF   shift, and go to state 30

    $default  reduce using rule 7 (expr_ens)


State 15

   28 expr: IDENT '=' expr_ens .

    $default  reduce using rule 28 (expr)


State 16

   27 expr: IDENT '=' expr_arth .

    $default  reduce using rule 27 (expr)


State 17

   12 expr_ens: '(' . expr_ens ')'
   13         | '(' . expr_ens ')' T_UNION expr_ens
   14         | '(' . expr_ens ')' T_INTER expr_ens
   15         | '(' . expr_ens ')' T_DIFF expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 24


State 18

   21 expr_arth: T_CARD expr_ens .

    $default  reduce using rule 21 (expr_arth)


State 19

   10 expr_ens: T_COMPL expr_ens .

    $default  reduce using rule 10 (expr_ens)


State 20

   17 expr_arth: T_arith '+' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 32


State 21

   18 expr_arth: T_arith '-' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 33


State 22

   19 expr_arth: T_arith '*' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 34


State 23

   20 expr_arth: T_arith '/' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 35


State 24

   12 expr_ens: '(' expr_ens . ')'
   13         | '(' expr_ens . ')' T_UNION expr_ens
   14         | '(' expr_ens . ')' T_INTER expr_ens
   15         | '(' expr_ens . ')' T_DIFF expr_ens

    ')'  shift, and go to state 36


State 25

   22 expr_arth: '(' expr_arth . ')'
   23          | '(' expr_arth . ')' '+' expr_arth
   24          | '(' expr_arth . ')' '-' expr_arth
   25          | '(' expr_arth . ')' '*' expr_arth
   26          | '(' expr_arth . ')' '/' expr_arth

    ')'  shift, and go to state 37


State 26

    3 nbr: T_INT .
    4    | T_INT . ',' nbr

    ','  shift, and go to state 38

    $default  reduce using rule 3 (nbr)


State 27

    6 ensemble: '{' nbr . '}'

    '}'  shift, and go to state 39


State 28

    9 expr_ens: ensemble T_INTER . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 40


State 29

    8 expr_ens: ensemble T_UNION . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 41


State 30

   11 expr_ens: ensemble T_DIFF . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 42


State 31

   22 expr_arth: '(' . expr_arth ')'
   23          | '(' . expr_arth ')' '+' expr_arth
   24          | '(' . expr_arth ')' '-' expr_arth
   25          | '(' . expr_arth ')' '*' expr_arth
   26          | '(' . expr_arth ')' '/' expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 25


State 32

   17 expr_arth: T_arith '+' expr_arth .

    $default  reduce using rule 17 (expr_arth)


State 33

   18 expr_arth: T_arith '-' expr_arth .

    $default  reduce using rule 18 (expr_arth)


State 34

   19 expr_arth: T_arith '*' expr_arth .

    $default  reduce using rule 19 (expr_arth)


State 35

   20 expr_arth: T_arith '/' expr_arth .

    $default  reduce using rule 20 (expr_arth)


State 36

   12 expr_ens: '(' expr_ens ')' .
   13         | '(' expr_ens ')' . T_UNION expr_ens
   14         | '(' expr_ens ')' . T_INTER expr_ens
   15         | '(' expr_ens ')' . T_DIFF expr_ens

    T_INTER  shift, and go to state 43
    T_UNION  shift, and go to state 44
    T_DIFF   shift, and go to state 45

    $default  reduce using rule 12 (expr_ens)


State 37

   22 expr_arth: '(' expr_arth ')' .
   23          | '(' expr_arth ')' . '+' expr_arth
   24          | '(' expr_arth ')' . '-' expr_arth
   25          | '(' expr_arth ')' . '*' expr_arth
   26          | '(' expr_arth ')' . '/' expr_arth

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49

    $default  reduce using rule 22 (expr_arth)


State 38

    4 nbr: T_INT ',' . nbr

    T_INT  shift, and go to state 26

    nbr  go to state 50


State 39

    6 ensemble: '{' nbr '}' .

    $default  reduce using rule 6 (ensemble)


State 40

    9 expr_ens: ensemble T_INTER expr_ens .

    $default  reduce using rule 9 (expr_ens)


State 41

    8 expr_ens: ensemble T_UNION expr_ens .

    $default  reduce using rule 8 (expr_ens)


State 42

   11 expr_ens: ensemble T_DIFF expr_ens .

    $default  reduce using rule 11 (expr_ens)


State 43

   14 expr_ens: '(' expr_ens ')' T_INTER . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 51


State 44

   13 expr_ens: '(' expr_ens ')' T_UNION . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 52


State 45

   15 expr_ens: '(' expr_ens ')' T_DIFF . expr_ens

    IDENT    shift, and go to state 8
    T_COMPL  shift, and go to state 10
    '('      shift, and go to state 17
    '{'      shift, and go to state 13

    ensemble  go to state 14
    expr_ens  go to state 53


State 46

   23 expr_arth: '(' expr_arth ')' '+' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 54


State 47

   24 expr_arth: '(' expr_arth ')' '-' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 55


State 48

   25 expr_arth: '(' expr_arth ')' '*' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 56


State 49

   26 expr_arth: '(' expr_arth ')' '/' . expr_arth

    T_CARD   shift, and go to state 9
    T_arith  shift, and go to state 11
    '('      shift, and go to state 31

    expr_arth  go to state 57


State 50

    4 nbr: T_INT ',' nbr .

    $default  reduce using rule 4 (nbr)


State 51

   14 expr_ens: '(' expr_ens ')' T_INTER expr_ens .

    $default  reduce using rule 14 (expr_ens)


State 52

   13 expr_ens: '(' expr_ens ')' T_UNION expr_ens .

    $default  reduce using rule 13 (expr_ens)


State 53

   15 expr_ens: '(' expr_ens ')' T_DIFF expr_ens .

    $default  reduce using rule 15 (expr_ens)


State 54

   23 expr_arth: '(' expr_arth ')' '+' expr_arth .

    $default  reduce using rule 23 (expr_arth)


State 55

   24 expr_arth: '(' expr_arth ')' '-' expr_arth .

    $default  reduce using rule 24 (expr_arth)


State 56

   25 expr_arth: '(' expr_arth ')' '*' expr_arth .

    $default  reduce using rule 25 (expr_arth)


State 57

   26 expr_arth: '(' expr_arth ')' '/' expr_arth .

    $default  reduce using rule 26 (expr_arth)
